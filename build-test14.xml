<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
   <!ENTITY libraries  SYSTEM "../thirdparty/libraries.ent">
   <!ENTITY targets SYSTEM "../tools/etc/buildmagic/targets.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="main" name="JBoss/Container Tests">

  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->

  <!--
     | Include the common Buildmagic elements.
     |
     | This defines several different targets, properties and paths.
     | It also sets up the basic extention tasks amoung other things.
   -->

  &buildmagic;

  <!--
     | Include the normal targets.
   -->
  &targets;

  <!-- ================================================================== -->
  <!-- Configuration                                                      -->
  <!-- ================================================================== -->

  <!--
     | Configure the build system.
     |
     | This target is invoked by the Buildmagic initialization logic and
     | should contain module specific configuration elements.
   -->

  <target name="configure" unless="configure.disable">

    <!-- =================== -->
    <!-- Basic Configuration -->
    <!-- =================== -->

    <!-- Module name(s) & version -->
    <property name="module.name" value="container"/>
    <property name="module.Name" value="JBoss Container"/>
    <property name="module.version" value="M1"/>

    <!-- ========= -->
    <!-- Libraries -->
    <!-- ========= -->

    &libraries;

    <!-- The combined library classpath -->
    <path id="library.classpath">
      <path refid="jboss.common.classpath"/>
      <path refid="junit.junit.classpath"/>
      <path refid="javassist.classpath"/>
      <path refid="apache.log4j.classpath"/>
      <path refid="oswego.concurrent.classpath"/>
      <path refid="jboss.profiler.jvmti.classpath"/>
      <path refid="jboss.test.classpath"/>
    </path>

    <!-- ======= -->
    <!-- Modules -->
    <!-- ======= -->

<!-- this -->
<property name="jboss.this.root" value="${module.root}/output"/>
<property name="jboss.this.lib" value="${jboss.this.root}/lib"/>
<path id="jboss.this.classpath">
   <fileset dir="${jboss.this.lib}">
      <include name="*.jar"/>
      <include name="*14.jar"/>
      <exclude name="*-test.jar"/>
      <exclude name="${jar.prefix}14.jar"/>
   </fileset>
</path>

    <!-- The combined dependant module classpath -->
    <path id="dependentmodule.classpath">
      <path refid="jboss.this.classpath"/>
    </path>

    <!-- ===== -->
    <!-- Tasks -->
    <!-- ===== -->

    <property name="source.java" value="${module.source}/tests"/>
    <property name="javac.target" value="1.5"/>
    <property name="javac.source" value="1.5"/>
    <property name="build.classes" value="${module.output}/classes-tests"/>
    <property name="build.classes.retro" value="${module.output}/classes-tests-retro"/>
    <property name="build.testlog" value="${module.output}/log"/>
    <property name="build-bypass.disabled" value="true"/>

    <call target="_default:task-init"/>

    <path id="thirdparty.classpath">
      <path refid="library.classpath"/>
      <path refid="dependentmodule.classpath"/>
    </path>

    <!-- ============================= -->
    <!-- Paths etc. for the retro task -->
    <!-- ============================= -->
    <property name="build.classes.retro" value="${module.output}/classes-retro"/>
    <property name="build.lib.retro" value="${module.output}/lib14"/>
    <path id="jbossretro.classpath">
      <path refid="apache.ant.classpath"/>
      <path refid="jboss.jbossretro.classpath"/>
      <path refid="jboss/backport.concurrent.classpath"/>
    </path>
    <path id="jbossretrort.classpath">
      <path refid="jboss/backport.concurrent.classpath"/>
      <pathelement path="${jboss.jbossretro.lib}/jbossretro-rt.jar"/>
    </path>
    <path id="tests.classpath">
      <path refid="jbossretrort.classpath"/>
	   <fileset dir="${build.lib.retro}">
	      <include name="*.jar"/>
	   </fileset>
      <path refid="jboss.test.classpath"/>
      <path refid="jboss.common.classpath"/>
      <path refid="apache.log4j.classpath"/>
      <path refid="javassist.classpath"/>
      <path refid="oswego.concurrent.classpath"/>
      <path refid="jboss.profiler.jvmti.classpath"/>
    </path>
  </target>

  <!-- ================================================================== -->
  <!-- Compile                                                            -->
  <!-- ================================================================== -->

  <!--
     | Compile everything.
     |
     | This target should depend on other compile-* targets for each
     | different type of compile that needs to be performed, short of
     | documentation compiles.
   -->

  <target name="compile"
	  description="Compile all source files."
	  depends="retro"
  />

  <target name="retro">
     <mkdir dir="${build.lib.retro}"/>
     <taskdef name="retro" classname="org.jboss.ant.tasks.retro.Retro" classpathref="jbossretro.classpath"/>
     <retro compilerclasspathref="jbossretro.classpath" destdir="${build.classes.retro}">
        <classpath refid="jbossretro.classpath"/>
        <classpath refid="library.classpath"/>
        <classpath refid="dependentmodule.classpath"/>
        <classpath>
           <pathelement path="${build.classes}"/>
        </classpath>
        <src path="${build.classes}"/>
     </retro>
  </target>


  <!-- ================================================================== -->
  <!-- Archives                                                           -->
  <!-- ================================================================== -->

  <!--
     |  Build all jar files.
    -->
  <target name="module-jars" depends="init">

    <!-- Build jboss-kernel.jar -->
    <jar jarfile="${build.lib.retro}/jboss-container-test14.jar" manifest="${build.etc}/default.mf">
      <fileset dir="${build.classes.retro}"/>
    </jar>

     <jar destfile="${build.lib.retro}/jar1.jar">
        <manifest>
           <attribute name="Specification-Title" value="jar1" />
           <attribute name="Specification-Version" value="1.0.0.GA-jar1" />
           <attribute name="Specification-Vendor" value="JBoss Inc." />
        </manifest>
        <zipfileset dir="${build.classes.retro}">
           <include name="org/jboss/test/vfs/support/jar1/**" />
        </zipfileset>
     </jar>
     <jar destfile="${build.lib.retro}/jar2.jar">
        <manifest>
           <attribute name="Specification-Title" value="jar2" />
           <attribute name="Specification-Version" value="1.0.0.GA-jar2" />
           <attribute name="Specification-Vendor" value="JBoss Inc." />
        </manifest>
        <zipfileset dir="${build.classes.retro}">
           <include name="org/jboss/test/vfs/support/jar2/**" />
        </zipfileset>
     </jar>
     <jar destfile="${build.lib.retro}/outer.jar">
       <manifest>
          <attribute name="Specification-Title" value="outer-jar" />
          <attribute name="Specification-Version" value="1.0.0.GA" />
          <attribute name="Specification-Vendor" value="JBoss Inc." />
          <attribute name="Implementation-Title" value="outer-jar-test" />
          <attribute name="Implementation-URL" value="www.jboss.org" />
          <attribute name="Implementation-Version" value="1.0.0.GA-jboss" />
          <attribute name="Implementation-Vendor" value="JBoss Inc." />
       </manifest>
        <zipfileset dir="${build.lib.retro}">
           <include name="jar1.jar" />
           <include name="jar2.jar" />
        </zipfileset>
        <zipfileset dir="${build.classes.retro}">
           <include name="org/jboss/test/vfs/support/*" />
        </zipfileset>
     </jar>

  	<!-- Profile service test jars -->
    <jar destfile="${build.lib.retro}/p0.jar">
      <manifest>
         <attribute name="Specification-Title" value="profile0-jar" />
         <attribute name="Specification-Version" value="1.0.0.GA" />
         <attribute name="Specification-Vendor" value="JBoss Inc." />
         <attribute name="Implementation-Title" value="p0-jar-test" />
         <attribute name="Implementation-URL" value="www.jboss.org" />
         <attribute name="Implementation-Version" value="1.0.0.GA-jboss" />
         <attribute name="Implementation-Vendor" value="JBoss Inc." />
      </manifest>
       <zipfileset dir="${build.classes.retro}">
          <include name="org/jboss/test/profileservice/profiles/p0/**" />
       </zipfileset>
    </jar>
  </target>

  <!-- ================================================================== -->
  <!-- Tests                                                              -->
  <!-- ================================================================== -->

   <target name="tests" depends="init"
      description="Execute all tests in the given test directory.">

      <!-- The tests must be run with jdk1.4.x -->
      <condition property="jdk14x">
         <equals arg1="${ant.java.version}" arg2="1.4" />
      </condition>
      <fail message="jdk1.4.x must be used for the tests" unless="jdk14x"/>

      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>

      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         fork="true">

         <sysproperty key="build.testlog" value="${build.testlog}"/>

         <classpath>
            <pathelement location="${build.classes.retro}"/>
            <pathelement location="${build.resources}"/>
            <path refid="tests.classpath"/>
            <path refid="apache.xerces.classpath"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes.retro}">
               <include name="org/jboss/test/**/*TestCase.class"/>
               <exclude name="org/jboss/test/annotation/factory/test/NoJavassistAnnotationCreatorTestCase.class"/>
               <exclude name="org/jboss/test/metadata/loader/reflection/test/*.class"/>
            </fileset>
         </batchtest>
      </junit>

   </target>

   <target name="memory-test" depends="most" description="Execute MemoryLeakTestCase">
      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>

	      <junit printsummary="yes" fork="yes" haltonfailure="no">
         <classpath>
            <pathelement location="${build.classes}"/>
            <pathelement location="${build.resources}"/>
	         <path refid="thirdparty.classpath"/>
            <path refid="javac.classpath"/>
            <path refid="apache.xerces.classpath"/>
         </classpath>
         <jvmarg value="-agentlib:jbossAgent"/>
         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>
	      <test fork="yes" todir="${build.reports}" name="org.jboss.test.memorytests.ClassInfoMemoryTestCase"/>
	      </junit>

	   </target>

</project>
